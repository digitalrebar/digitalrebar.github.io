[
    {
        "type": "message",
        "user": "U9R87AWKE",
        "text": "are you guys pushing to DockerHub on a regular basis for `provision`?",
        "ts": "1521736831.000628"
    },
    {
        "type": "message",
        "user": "U6QFVRJNB",
        "text": "\"semi regular\"",
        "ts": "1521736920.000642"
    },
    {
        "type": "message",
        "user": "U6QFVRJNB",
        "text": "the current version appears to be v3.7.1 - our current stable version is v3.7.3",
        "ts": "1521736933.000802"
    },
    {
        "type": "message",
        "user": "U6QFVRJNB",
        "text": "hmm - maybe I take that back",
        "ts": "1521736952.000416"
    },
    {
        "type": "message",
        "user": "U6QFVRJNB",
        "text": "we do have a \"stable\" tagged version - which is likely v3.7.3 - but I'll check further for you on that",
        "ts": "1521736975.000335"
    },
    {
        "type": "message",
        "user": "U6QFVRJNB",
        "text": "the \"latest\" tagged version is our `tip` version it looks like - so that is bleeding edge",
        "ts": "1521737007.000059"
    },
    {
        "type": "message",
        "user": "U6QFVRJNB",
        "text": "recommendation is to pull `stable`",
        "ts": "1521737015.000347"
    },
    {
        "type": "message",
        "user": "U9R87AWKE",
        "text": "i only see tip and latest",
        "ts": "1521737131.000381"
    },
    {
        "type": "message",
        "user": "U9R87AWKE",
        "text": "<https:\/\/hub.docker.com\/r\/digitalrebar\/provision\/builds\/>",
        "ts": "1521737135.000319"
    },
    {
        "type": "message",
        "user": "U6QFVRJNB",
        "text": "it's listed in tags - let me do a quick bit of testing and get back to you",
        "ts": "1521737191.000311"
    },
    {
        "type": "message",
        "user": "U9R87AWKE",
        "text": "ok you don't tag it that way but its from stable `ARG DRP_VERSION=stable`",
        "ts": "1521737197.000237"
    },
    {
        "type": "message",
        "user": "U9R87AWKE",
        "text": "ok",
        "ts": "1521737198.000289"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "stable is refs the latest build (we don’t build it as stable because we want to know the versino).",
        "ts": "1521738056.000902"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "I haven’t found an auto version builder yet.  I’ve just started a v3.7.3 build.",
        "ts": "1521738074.000564"
    },
    {
        "type": "message",
        "user": "U8FAN7PLK",
        "text": "<!here> Hey guys. I'm trying the HTTP API (with POSTMAN) right now to create some parameters for a machines. According to swagger, the headers needed to do a POST are the following:\n```Content-type: application\/json\nAccept: application\/json\nAuthorization: Basic &lt;&lt;insert_token_here&gt;&gt;```\nMy question here is, how do I get a token: is it by using `\"{{.GenerateToken}}\"` ?",
        "ts": "1521752135.000136"
    },
    {
        "type": "message",
        "user": "U02DJQSG8",
        "text": "`Authorization: Token &lt;&lt;insert token here`",
        "ts": "1521752186.000127"
    },
    {
        "type": "message",
        "user": "U02DJQSG8",
        "text": "and yeah, `{{.GenerateToken}}` should get you one.",
        "ts": "1521752235.000542"
    },
    {
        "type": "message",
        "user": "U02DJQSG8",
        "text": "Swagger doesn't knopw about multiple auth schemes.",
        "ts": "1521752257.000686"
    },
    {
        "type": "message",
        "user": "U02DJQSG8",
        "text": "Basic is just standard base64 username:passwd encoding.",
        "ts": "1521752281.000574"
    },
    {
        "type": "message",
        "user": "U8FAN7PLK",
        "text": "okok :slightly_smiling_face:",
        "ts": "1521752289.000148"
    },
    {
        "type": "message",
        "user": "U8FAN7PLK",
        "text": "let me try quickly.",
        "ts": "1521752314.000426"
    },
    {
        "type": "message",
        "user": "U8FAN7PLK",
        "text": "mmm for some reason it doesn't work using POSTMAN...",
        "ts": "1521752420.000324"
    },
    {
        "type": "message",
        "user": "U02DJQSG8",
        "text": "Tokens generated using GenerateToken are intentionally very limited in what they can do.",
        "ts": "1521752487.000113"
    },
    {
        "type": "message",
        "user": "U02DJQSG8",
        "text": "Depending on the exact template you are using, you can either just list and create a machine, or change things about a specific machine.",
        "ts": "1521752612.000114"
    },
    {
        "type": "message",
        "user": "U02DJQSG8",
        "text": "It boils down to whether the template was rendered for a machine or for a bootenv that is used to boot unknown machines.",
        "ts": "1521752717.000596"
    },
    {
        "type": "message",
        "user": "U02DJQSG8",
        "text": "What is the scenario you are working on?",
        "ts": "1521752802.000562"
    },
    {
        "type": "message",
        "user": "U8FAN7PLK",
        "text": "what I am trying to do is this exactly:\n```    gohai = subprocess.check_output(['gohai'])\n    inventory = json.loads(gohai)\n    pprint.pprint(RS_TOKEN)\n    try:\n        data = { \\\n                    \"bios-version\": inventory['DMI']['BIOS']['BIOSVersion'], \\\n                    \"bios-vendor\": inventory['DMI']['BIOS']['Vendor'], \\\n                    \"bios-config\":  inventory['DMI']['BIOS']['Characteristics'] \\\n               }\n        headers = {\n            \"Content-Type\": \"application\/json\",\n            \"Accept\": \"application\/json\",\n            \"Authorization\": \"Token {0}\".format(RS_TOKEN)\n        }\n\n        pprint.pprint(\"{0}\/api\/v3\/machines\/{1}\/params\".format(RS_ENDPOINT,RS_UUID))\n        r = <http:\/\/requests.post|requests.post>(\"{0}\/api\/v3\/machines\/{1}\/params\".format(RS_ENDPOINT,RS_UUID), data=data, headers=headers, verify=False)\n        if r.status_code != 200:\n            raise Exception(r.content)\n    except requests.exceptions.RequestException as error:\n        err(error)\n        sys.exit(2)```",
        "edited": {
            "user": "U8FAN7PLK",
            "ts": "1521752881.000000"
        },
        "ts": "1521752832.000450"
    },
    {
        "type": "message",
        "user": "U8FAN7PLK",
        "text": "The thing I want to do is to collect information from the gohai command and add them to the machines using python.\nThen it would be much easier for me to mirror them into our DCIM.",
        "edited": {
            "user": "U8FAN7PLK",
            "ts": "1521752931.000000"
        },
        "ts": "1521752920.000313"
    },
    {
        "type": "message",
        "user": "U8FAN7PLK",
        "text": "(sorry for the python, I know some people here don't like it ^^)",
        "ts": "1521752953.000100"
    },
    {
        "type": "message",
        "user": "U02DJQSG8",
        "text": "ok",
        "ts": "1521752976.000393"
    },
    {
        "type": "message",
        "user": "U02DJQSG8",
        "text": "Doing it that way is definitly not what you want, as it will blow away all the other params on the machine.",
        "ts": "1521753026.000284"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "It is `Bearer` instead of `Token`",
        "ts": "1521753050.000047"
    },
    {
        "type": "message",
        "user": "U8FAN7PLK",
        "text": "I should use `POST \/machines\/{uuid}\/params\/{key}` I guess ?",
        "ts": "1521753073.000295"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "yes to POST",
        "ts": "1521753145.000176"
    },
    {
        "type": "message",
        "user": "U8FAN7PLK",
        "text": "ok",
        "ts": "1521753205.000488"
    },
    {
        "type": "message",
        "user": "U8FAN7PLK",
        "text": "let me try this with bearer and the right endpoint.",
        "edited": {
            "user": "U8FAN7PLK",
            "ts": "1521753219.000000"
        },
        "ts": "1521753215.000639"
    },
    {
        "type": "message",
        "user": "U02DJQSG8",
        "text": "For partial updates our API uses PATCH and takes <https:\/\/tools.ietf.org\/html\/rfc6902> compliant JSON patches",
        "edited": {
            "user": "U02DJQSG8",
            "ts": "1521753283.000000"
        },
        "ts": "1521753270.000516"
    },
    {
        "type": "message",
        "user": "U8FAN7PLK",
        "text": "Is it not possible to create multiple parameters for a machine at once ?",
        "ts": "1521753332.000711"
    },
    {
        "type": "message",
        "user": "U8FAN7PLK",
        "text": "without wiping what is already there i mean.:slightly_smiling_face:",
        "edited": {
            "user": "U8FAN7PLK",
            "ts": "1521753364.000000"
        },
        "ts": "1521753358.000141"
    },
    {
        "type": "message",
        "user": "U02DJQSG8",
        "text": "You use PATCH for that.",
        "ts": "1521753376.000451"
    },
    {
        "type": "message",
        "user": "U8FAN7PLK",
        "text": "Ok, that what you just said :smile:, didn't see lol",
        "ts": "1521753401.000124"
    },
    {
        "type": "message",
        "user": "U02DJQSG8",
        "text": "Fetch the object, copy it, make your changes on the copy, generate a JSON Patch with test stanzas, and send that as a PATCH",
        "edited": {
            "user": "U02DJQSG8",
            "ts": "1521753432.000000"
        },
        "ts": "1521753424.000174"
    },
    {
        "type": "message",
        "user": "U02DJQSG8",
        "text": "We also support PUT, but PATCH with test stanzas allows us to do things like use a param as a cheap distributed lock.",
        "ts": "1521753663.000056"
    },
    {
        "type": "message",
        "user": "U02DJQSG8",
        "text": "which comes in handy when (for example) setting up an etcd cluster and not having to manually pick the masters.",
        "ts": "1521753812.000244"
    },
    {
        "type": "message",
        "user": "U8FAN7PLK",
        "text": "I'll try that !",
        "ts": "1521753978.000005"
    },
    {
        "type": "message",
        "user": "U8FAN7PLK",
        "text": "But tomorrow, today is coming to an end for me.",
        "ts": "1521754000.000172"
    },
    {
        "type": "message",
        "user": "U8FAN7PLK",
        "text": "thanks again for the assistance, talk to you tomorrow !",
        "ts": "1521754182.000409"
    },
    {
        "type": "message",
        "user": "U8FAN7PLK",
        "text": "have a good evening !",
        "ts": "1521754186.000440"
    }
]