[
    {
        "type": "message",
        "user": "UBXEU90UQ",
        "text": "NetWrangler looks interesting :+1:",
        "client_msg_id": "40c296c7-d597-4ea7-a46f-5f3dc19869cc",
        "ts": "1535624604.000100"
    },
    {
        "type": "message",
        "user": "UCD5VP2C8",
        "text": "Is there a github project for building Sledgehammer? Or documentation of how it's built?",
        "client_msg_id": "4f24e0bc-6359-465e-a727-81eeaafd8631",
        "ts": "1535631517.000100"
    },
    {
        "type": "message",
        "user": "U02DHRR2L",
        "text": "<https:\/\/github.com\/digitalrebar\/sledgehammer>",
        "client_msg_id": "f83f2a85-a74d-4342-b19b-a99bcd51a4bd",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "digitalrebar\/sledgehammer",
                "title_link": "https:\/\/github.com\/digitalrebar\/sledgehammer",
                "text": "Contains the code and publish tools for sledgehammer (DRP and DR use it) - digitalrebar\/sledgehammer",
                "fallback": "GitHub: digitalrebar\/sledgehammer",
                "from_url": "https:\/\/github.com\/digitalrebar\/sledgehammer",
                "thumb_url": "https:\/\/avatars1.githubusercontent.com\/u\/13814120?s=400&v=4",
                "thumb_width": 250,
                "thumb_height": 250,
                "service_icon": "https:\/\/a.slack-edge.com\/bfaba\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/digitalrebar\/sledgehammer"
            }
        ],
        "ts": "1535634230.000100"
    },
    {
        "type": "message",
        "user": "U02DHRR2L",
        "text": "<@UCD5VP2C8> ^^",
        "client_msg_id": "d964d5b2-09b0-4e7b-afbe-266da7cad980",
        "ts": "1535634242.000100"
    },
    {
        "type": "message",
        "user": "UCD5VP2C8",
        "text": "Thanks!",
        "client_msg_id": "c028588e-5984-4d59-a186-4193b82f99d4",
        "ts": "1535634253.000100"
    },
    {
        "type": "message",
        "user": "U02DHRR2L",
        "text": "<@UCJ47MZTP> $welcome",
        "client_msg_id": "b2124583-4a9e-4a67-bf16-3a8d223ee640",
        "ts": "1535634266.000100",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCJ47MZTP"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "Digital Rebar welcome information is here &gt; <http:\/\/rebar.digital\/community\/welcome.html>",
        "type": "message",
        "subtype": "slackbot_response",
        "user": "USLACKBOT",
        "ts": "1535634266.000200"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "<@UCD5VP2C8> we are trying to move off of that and use drp to build it.  ",
        "client_msg_id": "C8210418-1740-470F-9A91-729EC4EB51FD",
        "ts": "1535634811.000100"
    },
    {
        "type": "message",
        "user": "U8FAN7PLK",
        "text": "<!here> hey guys, I am parsing the documentation regarding golan text\/template, and I am having trouble find if it's possible to create `for loop` structure given a json input.\nLet's say I have this param (called `interfaces`) on a machine:\n```[\n\t{\t'Name: 'eno2'\n\t\t'MacAddress': 'ac:1f:6b:48:bc:e3', \n\t\t'StableName': 'eno2', \n\t}, \n\t{\t'Name':'eth0',\n\t\t'MacAddress': 'ac:1f:6b:48:bc:e2', \n\t\t'StableName': 'eno1', \n\t}\n]```\nAnd I want to use the `curtin\/network\/template` param to configure my network on my server. So I am going to create a new template file that I assume should look like this if my idea is possible:\n```\nnetwork:\n version: 1\n config:\n {{ if .ParamExists \"interface\" }}\n \t{{ range .Param \"interfaces\" }}\n\t- type: physical\n\t- name: {{ .Param \"interfaces\" }} (I'm looking to get the stable name here but don't know how)\n\t{{ end }}\n {{ end }}\n```",
        "client_msg_id": "30e73377-67a7-4d0c-a995-5b1961d63a31",
        "edited": {
            "user": "U8FAN7PLK",
            "ts": "1535652734.000000"
        },
        "ts": "1535652603.000100"
    },
    {
        "type": "message",
        "user": "U8FAN7PLK",
        "text": "didn't get any good example of what I want to do here:\n<https:\/\/golang.org\/pkg\/text\/template\/#hdr-Actions>",
        "client_msg_id": "3d055f5a-4d8a-4ba0-b526-769c46740923",
        "ts": "1535652766.000100"
    },
    {
        "type": "message",
        "user": "U02DHRR2L",
        "text": "yes, you can do it using range functions",
        "client_msg_id": "607bcd20-f525-421c-be51-b473282a7494",
        "ts": "1535652982.000100"
    },
    {
        "type": "message",
        "text": "<@U8FAN7PLK> here's an example",
        "files": [
            {
                "id": "FCJ88D9CL",
                "created": 1535653047,
                "timestamp": 1535653047,
                "name": "Example_of_Range_with_inventory_data_from_KRIB.txt",
                "title": "Example of Range with inventory\/data from KRIB",
                "mimetype": "text\/plain",
                "filetype": "text",
                "pretty_type": "Plain Text",
                "user": "U02DHRR2L",
                "editable": true,
                "size": 412,
                "mode": "snippet",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https:\/\/files.slack.com\/files-pri\/T02DGQYJZ-FCJ88D9CL\/example_of_range_with_inventory_data_from_krib.txt?t=xoxe-2458848645-432744317105-433486990661-648d122d7e37a3b00999281d87b4509a",
                "url_private_download": "https:\/\/files.slack.com\/files-pri\/T02DGQYJZ-FCJ88D9CL\/download\/example_of_range_with_inventory_data_from_krib.txt?t=xoxe-2458848645-432744317105-433486990661-648d122d7e37a3b00999281d87b4509a",
                "permalink": "https:\/\/rackn.slack.com\/files\/U02DHRR2L\/FCJ88D9CL\/example_of_range_with_inventory_data_from_krib.txt",
                "permalink_public": "https:\/\/slack-files.com\/T02DGQYJZ-FCJ88D9CL-b065b435fb",
                "edit_link": "https:\/\/rackn.slack.com\/files\/U02DHRR2L\/FCJ88D9CL\/example_of_range_with_inventory_data_from_krib.txt\/edit",
                "preview": "  {{if .ParamExists \"inventory\/data\" -}}\r\n    {{range $key, $value := .Param \"inventory\/data\" -}}\r\n      echo \"Adding {{$key}}=\\\"{{$value | toString | replace \" \" \"_\"  | -}}\\\" label to machine $HOSTNAME\"\r\n      kubectl label nodes $HOSTNAME {{$key}}=\"{{$value | toString | replace \" \" \"_\" -}}\" || true\r\n    {{end }}\r",
                "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>  {{if .ParamExists &quot;inventory\/data&quot; -}}<\/pre><\/div>\n<div><pre>    {{range $key, $value := .Param &quot;inventory\/data&quot; -}}<\/pre><\/div>\n<div><pre>      echo &quot;Adding {{$key}}=\\&quot;{{$value | toString | replace &quot; &quot; &quot;_&quot;  | -}}\\&quot; label to machine $HOSTNAME&quot;<\/pre><\/div>\n<div><pre>      kubectl label nodes $HOSTNAME {{$key}}=&quot;{{$value | toString | replace &quot; &quot; &quot;_&quot; -}}&quot; || true<\/pre><\/div>\n<div><pre>    {{end }}<\/pre><\/div>\n<div><pre><\/pre><\/div>\n<\/div>\n<\/div>\n",
                "lines": 9,
                "lines_more": 4,
                "preview_is_truncated": false
            }
        ],
        "upload": true,
        "user": "U02DHRR2L",
        "display_as_bot": false,
        "edited": {
            "user": "U02DHRR2L",
            "ts": "1535653158.000000"
        },
        "ts": "1535653048.000100"
    },
    {
        "type": "message",
        "user": "U02DHRR2L",
        "text": "the new `sprig` functions provide some array options too.",
        "client_msg_id": "cfaf2698-aeef-4abd-becf-a6cc8849a441",
        "ts": "1535653085.000100"
    },
    {
        "type": "message",
        "user": "U8FAN7PLK",
        "text": "woohooo!",
        "client_msg_id": "d315777a-6be5-4645-a203-cda3b4d04ab6",
        "ts": "1535653115.000100"
    },
    {
        "type": "message",
        "user": "U8FAN7PLK",
        "text": "thx <@U02DHRR2L> trying that now!",
        "client_msg_id": "cb942400-222d-4152-9f43-0dbe0f09d004",
        "ts": "1535653130.000100"
    },
    {
        "type": "message",
        "user": "U02DHRR2L",
        "text": "the sprig pieces let you do all sorts of crazy manipulations; HOWEVER, THEY REQUIRE v1.10+",
        "client_msg_id": "67f0e84a-0385-47eb-8cb4-c367ca0d26d5",
        "ts": "1535653197.000200"
    },
    {
        "type": "message",
        "user": "U02DHRR2L",
        "text": "that example includes toString and replace which are both sprig library",
        "client_msg_id": "8f3f1cfc-cf20-4eaf-b4ae-3dd878766922",
        "ts": "1535653232.000100"
    },
    {
        "type": "message",
        "user": "U02DHRR2L",
        "text": "<!here> ICYMI video showing how to use kexec to skip boots during provision: <https:\/\/youtu.be\/Xm688Km3N4Y>",
        "client_msg_id": "1d8af35e-4835-4753-a5c2-3ed841572d2a",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "No Reboot Provisioning for DRP",
                "title_link": "https:\/\/youtu.be\/Xm688Km3N4Y",
                "author_name": "RackN & Digital Rebar",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCr3bBtP-pMsDQ5c0IDjt_LQ",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/Xm688Km3N4Y\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: No Reboot Provisioning for DRP",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/Xm688Km3N4Y?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/Xm688Km3N4Y",
                "service_icon": "https:\/\/a.slack-edge.com\/2089\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/Xm688Km3N4Y"
            }
        ],
        "ts": "1535656288.000100",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U6QFVRJNB",
                    "UBXEU90UQ",
                    "UB6EM48HM",
                    "UC6UCDSAH"
                ],
                "count": 4
            }
        ]
    },
    {
        "type": "message",
        "user": "U02DHRR2L",
        "text": "requires latest TIP content",
        "client_msg_id": "02cf3561-84f2-44c9-aa89-0890de69c08f",
        "ts": "1535656325.000100"
    }
]