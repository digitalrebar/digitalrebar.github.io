[
    {
        "user": "UC6GPHRM5",
        "text": "<@UC6GPHRM5> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1533800912.000256"
    },
    {
        "type": "message",
        "user": "U8RFVLLG1",
        "text": "Works like a charm, thx !",
        "client_msg_id": "9f0d8480-9bf4-43c6-a04e-20d5809c53d1",
        "thread_ts": "1533669349.000284",
        "parent_user_id": "U02DGQYK1",
        "ts": "1533819073.000343",
        "reactions": [
            {
                "name": "slightly_smiling_face",
                "users": [
                    "U02DGQYK1"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U02DHRR2L",
        "text": "<@UC6GPHRM5> $welcome",
        "client_msg_id": "ef9903cf-4b5e-4997-8482-903d8c14a81a",
        "ts": "1533823717.000299"
    },
    {
        "text": "Digital Rebar welcome information is here &gt; <http:\/\/rebar.digital\/community\/welcome.html>",
        "type": "message",
        "subtype": "slackbot_response",
        "user": "USLACKBOT",
        "ts": "1533823717.000392"
    },
    {
        "type": "message",
        "user": "UA1L5DEFQ",
        "text": "guys any notes \/ experience of running provision on docker. I see there is a regular push to docker hub offical repo but wondering if there are any gotchas in terms of servicing dhcp traffic etc.",
        "client_msg_id": "9cc0a0fd-ff1a-4cb7-8530-dc2edcedb927",
        "ts": "1533837691.000417"
    },
    {
        "type": "message",
        "user": "U6QFVRJNB",
        "text": "<@UA1L5DEFQ> - we do push to docker hub like you noticed, we have a number of people using it - and our Dockerfile has some details in it that may help with understanding the EXPOSE, etc around DHCP:\n<https:\/\/github.com\/digitalrebar\/provision\/blob\/master\/Dockerfile>",
        "client_msg_id": "41f1c83b-7aaf-4554-b502-c3a014fae99b",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "digitalrebar\/provision",
                "title_link": "https:\/\/github.com\/digitalrebar\/provision\/blob\/master\/Dockerfile",
                "text": "Digital Rebar Provision is a simple and powerful Golang executable that provides a complete API-driven DHCP\/PXE\/TFTP provisioning system.",
                "fallback": "GitHub: digitalrebar\/provision",
                "from_url": "https:\/\/github.com\/digitalrebar\/provision\/blob\/master\/Dockerfile",
                "thumb_url": "https:\/\/avatars1.githubusercontent.com\/u\/13814120?s=400&v=4",
                "thumb_width": 250,
                "thumb_height": 250,
                "service_icon": "https:\/\/a.slack-edge.com\/bfaba\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/digitalrebar\/provision\/blob\/master\/Dockerfile"
            }
        ],
        "ts": "1533837805.000569"
    },
    {
        "type": "message",
        "user": "UA1L5DEFQ",
        "text": "<@U6QFVRJNB> thanks for the pointer to the Dockerfile. I am more interested in the practical docker run command and I am assuming a --net=host flag would be needed to harvest the dhcp request off the host wire.",
        "client_msg_id": "2d147a16-0872-4d3c-9887-114ef4ac9816",
        "ts": "1533838174.000144"
    },
    {
        "type": "message",
        "user": "U6QFVRJNB",
        "text": "sure - we've seen usage in the field as follows:  `docker run -itd --name drp --net host digitalrebar\/provision:stable`",
        "client_msg_id": "e85ccc5e-aba3-4094-8080-d6efe5b4712c",
        "ts": "1533840885.000196"
    },
    {
        "type": "message",
        "user": "U6QFVRJNB",
        "text": "<@UA1L5DEFQ> sorry ... forgot to tag you ^^^^",
        "client_msg_id": "4aa7950a-00f3-403b-8536-6509e2ce6b79",
        "ts": "1533842245.000037"
    },
    {
        "type": "message",
        "user": "UA1L5DEFQ",
        "text": "<@U6QFVRJNB> thanks for confirming the --net host",
        "client_msg_id": "b0a8587e-ab8e-4342-a59a-e0cf59fee979",
        "ts": "1533848054.000077"
    },
    {
        "type": "message",
        "user": "U02DHRR2L",
        "text": "KUBERNETES update - the latest tip for KRIB automatically installs Helm and can install charts for you.",
        "client_msg_id": "3f987595-cd6e-4aa0-90dc-6e18b342f259",
        "ts": "1533855170.000099",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UBU0BPRA9"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U02DHRR2L",
        "text": "<https:\/\/youtu.be\/GjJXZ7z8Ca4>",
        "client_msg_id": "6ffd0fad-b07a-45f7-80cd-f0031d628b4c",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "KRIB auto install Helm Charts (2 minute Kubernetes install)",
                "title_link": "https:\/\/youtu.be\/GjJXZ7z8Ca4",
                "author_name": "RackN & Digital Rebar",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCr3bBtP-pMsDQ5c0IDjt_LQ",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/GjJXZ7z8Ca4\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: KRIB auto install Helm Charts (2 minute Kubernetes install)",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/GjJXZ7z8Ca4?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/GjJXZ7z8Ca4",
                "service_icon": "https:\/\/a.slack-edge.com\/2089\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/GjJXZ7z8Ca4"
            }
        ],
        "ts": "1533855170.000212"
    },
    {
        "type": "message",
        "user": "U02DHRR2L",
        "text": "NOTICE ABOUT UX LICENSE ENFORCEMENT COMING.... \nWe have added code into the RackN UX for the next release (it's already in <http:\/\/test.rackn.io|test.rackn.io>) that by default limits free accounts to 100 machines and DRP v3.8 or above.  \n\nFor RackN licensed or trial customers, these values are already set to reflect your current license terms.   The UX will continue to support larger machine counts and older versions for licensed customers.\n\nWe are looking for feedback and concerns about this change which will go fully in effect with the v3.11 release.",
        "client_msg_id": "6c72d50a-4b92-4d85-a828-33d71abd8d26",
        "edited": {
            "user": "U02DHRR2L",
            "ts": "1533856023.000000"
        },
        "ts": "1533855907.000070"
    }
]