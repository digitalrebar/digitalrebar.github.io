[
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "hmm - someone else last night had problems, but eventually found them on the sites listed there.",
        "ts": "1486475318.000243"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "come back <@U416T0AAX>  come back",
        "ts": "1486498339.000244"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "I’m still joined &amp; sharing...",
        "ts": "1486498370.000245"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "ok",
        "ts": "1486498375.000246"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "np",
        "ts": "1486498375.000247"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "Ok, I fail...\nTrying to make a node in system inventory (I.e. has run sledgehammer) do a install into an existing deployment (which has my desired bootenv set.) Went into Nodes, then clicked on \"Move Nodes\", selected desired deployment, then clicked on \"Redeploy Nodes\". The node rebooted, went into sledgehammer, and all nodes roles went green, but there she sits... How to get it to take the desired bootenv change??",
        "ts": "1486509769.000248"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "OK, here's what I figured out...\n- in Deployments, go to Matrix tab, click the Bind Node Roles icon, then click on \"provisioner-os-install\" and click the \"+\" key to do the binding. This will add the node role in blue (proposed state) beside the node. Do the same thing for the \"rebar-installed-node\" role.\n- Then click on the node role, and click the \"floppy\" icon on each role to commit the proposed role. Once this is done, DR will take the appropriate actions to conform the node to the role.",
        "ts": "1486511797.000249"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "So what I don’t get is what a “Deployment” is for? I would think it applies a collection of roles to a node, perhaps with per-deployment-specific node role attribute values… I could see the new (changed) ones sitting in “proposed” state until someone commits them, but I don’t understand why the new node roles don’t get applied automatically to the nodes put into the deployment...",
        "ts": "1486512052.000250"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "Oh - well - we need to talk aobut this more.  This moves to training and operations with regard to what things mean.  Can't right now though  I'll try later.",
        "ts": "1486515719.000251"
    },
    {
        "text": "<@U416T0AAX|wdennis> this is not in an obvious place... there are some docs about this: http:\/\/digital-rebar.readthedocs.io\/en\/latest\/api\/common.html under 5.5.1.7.2.",
        "username": "zehicle",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1486526488.000252"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "<@U02DHRR2L> Is the ‘rebar-installed-node’ role a “meta-role” (i.e. an aggregation of roles?)",
        "ts": "1486528170.000253"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "Like in Ansible you can have a meta-role that includes ‘n’ other roles into a package; when you use the meta-role it applies the included roles in order defined...",
        "ts": "1486528267.000254"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "I see that from those API docs that the example was binding the one ‘rebar-installed-role’ role to the node which was defined as “a usefule set of node roles\"",
        "ts": "1486528402.000255"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "And I see that on <http:\/\/digital-rebar.readthedocs.io\/en\/latest\/api\/common.html> in section 5.5.1.7.2.2 that one has to (should?) create a “deployment to deploy the nodes into”, but — why? What exactly is a deployment supposed to be? A collection of nodes that were installed with the same roles\/attributes? (I was thinking it was a defined collection of roles that would be applied to a node when a node was put into the deployment)",
        "ts": "1486528971.000256"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "There should be a way to define a collection of roles that conforms the target machines to an intended environment, which includes firmware, OS, and systems software, that serves as a base over the group of machines",
        "ts": "1486529289.000257"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "Then other roles can be layered on top on selected machines as desired (like the k8s stuff for instance)",
        "ts": "1486529332.000258"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "<@U416T0AAX> - we have some things to discuss.  With regard to DigitalRebar's models and how they are employed to get you where you want to go.",
        "ts": "1486530655.000259"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "First that objects: Deployments, Nodes, Roles, NodeRoles, DeploymentRoles and Attributes.",
        "ts": "1486530706.000260"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "Deployments = bags of nodes.  They just holding cells collect nodes.  We usually ascribe purpose to a deployment.  System deployment holding cell for discovered nodes.  RSEnv1 - the nodes in RSEnv1.",
        "ts": "1486530770.000261"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "Nodes = Things DR is operating on.  VMs, machines, cloud instances, a linux instance for example.",
        "ts": "1486530808.000262"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "Roles = Atomic functions that we want to apply to a node.  These have dependencies and attribute requirements that are met to build a graph of actions to sequence against nodes.",
        "ts": "1486530855.000263"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "NodeRoles = an instance of a Role applied to a Node within a deployment.",
        "ts": "1486530878.000264"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "The matrix tab in the deployment is visualization of this.  Nodes are rows, Roles are columns. Cells are NodeRoles.",
        "ts": "1486530923.000265"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "DeploymentRoles are special node roles for the Roles within a deployment.  MOre on this in a second.",
        "ts": "1486530955.000266"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "Attributes - typed pieces of information that are stored on the objects.",
        "ts": "1486530996.000267"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "Attributes can live on noderoles, nodes, deploymentroles.",
        "ts": "1486531032.000268"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "When a machine PXE boots to sledgehammer, sledgehammer creates a node in DR and places that node in the system deployment.  It also adds the noop role rebar-managed to the node.  This role has dependencies that cause the initial 15-ish roles to be added to the node.  Sledgehammer marks the node active after putting an SSH key in place.",
        "ts": "1486531144.000269"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "When the system added roles to the node, it created noderoles to present that roles execution on the node.  It also added deployment roles to the system deployment for those roles as well.",
        "ts": "1486531202.000270"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "The annealer (the part that executes noderoles) sequences all the node roles and starts executing them in order.",
        "ts": "1486531233.000271"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "To execute a node role, its attribute requirements must be met.  All this means is that a role can require an attribute (like what os should I install), the annealer will try to find a value for that by checking things in order.",
        "ts": "1486531295.000272"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "In order by node, noderole, deploymentrole, role.  This way you can create defaults by node, by deployment, by global.",
        "ts": "1486531365.000273"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "When you use the wizard to install the OS, you are really hiding about 5 steps.  First, you are creating a deployment for tracking your nodes for this function set.  Second, you are moving the nodes into the deployment for safe keeping, Third, you are adding noderoles  and deploymentroles to the node and deployment.  For the install OS wizard, this is done by adding the rebar-installed-node role (a noop) to the node.  This also brings in the provisioner_os-install role through dependencies.  Fourth, you are setting the target os attribute on the deployment_role to make it apply to all nodes in the deployment.   I think. IT could be putting it on the node instead.  I'd have to check.  Either way, the target os is getting set.  Fifth, the deployment and nodes are being committed causing the actions to take effect.",
        "ts": "1486531723.000274"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "FYI, you can see the deployment roles in the matrix view.  They are the column headers.  Those links take you to the deployment roles attribute setting pages.",
        "ts": "1486531764.000275"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "nodes in a deployment do NOT have to all have the same roles assigned to them.",
        "ts": "1486531849.000276"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "For examples, a kubernetes deployment would have a set of etcd nodes, master nodes, and worker nodes.  All of these have different node role assignments, but are all held within one deployment to represent the k8s instance.",
        "ts": "1486531901.000277"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "You ansible analogy is not correct from a underlying tech perspective, but it does probably reflect what it looks like is going on from the outside and isn't a bad way to think about roles requiring other roles.",
        "ts": "1486531977.000278"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "You have conflated action and configuration in your last part",
        "ts": "1486532017.000279"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "roles are actions, attributes are the configuration.",
        "ts": "1486532026.000280"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "So there are roles to do bios setting, firmware flashing, raid configuration, ipmi configuaration, OS installation,  deploy kubernetes, ....",
        "ts": "1486532111.000281"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "There are attributes that for the instances defined in a deployment control the configuration of that action for those set of nodes that have been declared to have that action done to them.",
        "ts": "1486532165.000282"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "It turns out there is one more feature that makes more of what you want functional.",
        "ts": "1486532201.000283"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "The Profile.",
        "ts": "1486532204.000284"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "The Profile is a attribute\/value list that overrides everything.",
        "ts": "1486532232.000285"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "You can give a node profile and it will use those attribute values as configuration.",
        "edited": {
            "user": "U02DGQYK1",
            "ts": "1486532268.000000"
        },
        "ts": "1486532261.000286"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "This way could build a profile that declared I want a raid5 volume and a raid10 volume and make the raid10 volume bootable, I want all the components at the latest levels, I want Ubuntu-16.04-ks, I want k8s verison 1.5.3, ....",
        "ts": "1486532370.000288"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "The you apply all the roles to them. (Yes, we have a road map item that the profile should include a set of roles to apply to the node).",
        "ts": "1486532412.000289"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "Add in some rule engine event handlers and all of this can be automated.",
        "ts": "1486532455.000290"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "It sounds really complex, but it isn't too bad.  Just takes a little to get you started with the right frame of reference.",
        "edited": {
            "user": "U02DGQYK1",
            "ts": "1486532502.000000"
        },
        "ts": "1486532481.000291"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "That was a dump.",
        "ts": "1486532510.000293"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "Got it? :slightly_smiling_face:",
        "ts": "1486532524.000294"
    }
]