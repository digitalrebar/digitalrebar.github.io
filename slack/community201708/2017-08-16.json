[
    {
        "text": "hello to everyone!",
        "username": "lion_kg_twitter",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502884230.000267"
    },
    {
        "text": "could anyone please help me. I am testing digitalrebar with kvm virtual mcahines. When I boot a VM from network I get stuck on mounting stage2.img with the following error\nfailed to mount xxxxx.squashfs as Stage2 initramfs",
        "username": "lion_kg_twitter",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502884321.000028"
    },
    {
        "text": "and then i drop out into shell",
        "username": "lion_kg_twitter",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502884358.000034"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "Are you using DRP or DR?",
        "ts": "1502891542.000329"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "Actually, for either case, make sure that the VM can reach the admin node.  Check how many nics you are booting and make sure that you are getting the nic you expect.  For example, vagrant adds an extra nic and that gets confusing.",
        "ts": "1502891646.000200"
    },
    {
        "text": "Sorry, redeployment of digital rear nodes Olvera the problem. It created a file stage2.img if a different size somehow and now everything works. Thank you for response. ",
        "username": "lion_kg_twitter",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502896252.000256"
    },
    {
        "text": "Sorry, redeployment of digital rebar nodes solved the problem.",
        "username": "lion_kg_twitter",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502896314.000049"
    },
    {
        "text": "great!  Glad to know that it's working",
        "username": "zehicle",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502896612.000282"
    },
    {
        "user": "U6QFVRJNB",
        "text": "<@U6QFVRJNB> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1502897696.000193"
    },
    {
        "user": "U6QB3MQCE",
        "text": "<@U6QB3MQCE> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1502901319.000058"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "<@U54E4SD4G> - Your pull request worked in unit tess and are in.  :slightly_smiling_face:  Thanks!  Now, to get DRP to use that repo.  :slightly_smiling_face:",
        "ts": "1502902359.000033"
    },
    {
        "type": "message",
        "user": "U54E4SD4G",
        "text": "yay",
        "ts": "1502904137.000380"
    },
    {
        "type": "message",
        "user": "U54E4SD4G",
        "text": "<@U02DGQYK1> so - I noticed that in the bootenvs for Debian and Ubuntu in digitalrebar's assets (which carried over into DRP's ubuntu bootenv) set OS.Family to debian and ubuntu, respectively - to me this is kind of confusing since I think of them as both in the debian family (similar to RHEL\/Centos\/Fedora all being of the redhat family) - ansible sees it this way and uses a separate variable, `ansible_distribution` to distinguish the different distros in the same family. I also note that in `tools\/install.sh` the same semantics that ansible uses are also used <https:\/\/github.com\/digitalrebar\/provision-content\/blob\/master\/tools\/install.sh#L93>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "digitalrebar\/provision-content",
                "title_link": "https:\/\/github.com\/digitalrebar\/provision-content\/blob\/master\/tools\/install.sh#L93",
                "text": "provision-content - DigitalRebar Provision Content",
                "fallback": "GitHub: digitalrebar\/provision-content",
                "from_url": "https:\/\/github.com\/digitalrebar\/provision-content\/blob\/master\/tools\/install.sh#L93",
                "thumb_url": "https:\/\/avatars1.githubusercontent.com\/u\/13814120?v=4&s=400",
                "thumb_width": 192,
                "thumb_height": 192,
                "service_icon": "https:\/\/a.slack-edge.com\/bfaba\/img\/unfurl_icons\/github.png",
                "id": 1
            }
        ],
        "ts": "1502904412.000643"
    },
    {
        "type": "message",
        "user": "U54E4SD4G",
        "text": "Does DRP use `OS.Family` itself or do only the templates use it?",
        "ts": "1502904446.000385"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "It is mostly info.  I don’t think it is used anywhere.  It could be expanded in templates.",
        "ts": "1502904481.000041"
    },
    {
        "type": "message",
        "user": "U54E4SD4G",
        "text": "Ah okay - so yeah, I was thinking of expanding usage of OS.Family into templates - for example making it simple to have different partitioning templates while retaining the primary preseed\/kickstart files - and that the partitioning templates would be identified by their layout rather than being a preseed or kickstart template - and within those partitioning templates we test for OS.Family",
        "ts": "1502904580.000306"
    },
    {
        "type": "message",
        "user": "U54E4SD4G",
        "text": "also actually, it is used in the preseed template right now to test whether or not we're installing Debian or Ubuntu",
        "ts": "1502904628.000203"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "okay - I see what you are going to do, I think.",
        "ts": "1502905000.000323"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "We haven’t tested this , but you could also do somethingl ike this:",
        "ts": "1502905355.000004"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "{{$partlayout := .Param “machine-part-config”}}\n{{template $partlayout .}}",
        "ts": "1502905393.000086"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "where machine-part-config would be a string parameter that contains the name of a template that represents the partitioning layout you want.",
        "ts": "1502905427.000443"
    },
    {
        "type": "message",
        "user": "U54E4SD4G",
        "text": "I was actually in the midst of typing something of a similar fashion out but got distracted by work",
        "ts": "1502905472.000508"
    },
    {
        "type": "message",
        "user": "U54E4SD4G",
        "text": "but basically yeah",
        "ts": "1502905483.000065"
    },
    {
        "type": "message",
        "user": "U54E4SD4G",
        "text": "and then have a default part-config",
        "ts": "1502905489.000269"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "This is the one area where the job\/task system doesn’t help.  The kickstart \/ preseed tweaks.",
        "ts": "1502905541.000223"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "This would be a good addition to the community templates.",
        "ts": "1502905580.000285"
    },
    {
        "type": "message",
        "user": "U54E4SD4G",
        "text": "(this is actually something I used to do with Cobbler previously, ha - although I had separate centos\/debian templates)",
        "ts": "1502905669.000598"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "yeah - we wanted to make sure something like this was functional to make it easier to move over from cobbler.",
        "ts": "1502905941.000211"
    },
    {
        "text": "Is there a way to join already existing VM Linux \"Node\" thats riding on vmware? ",
        "username": "hornjason",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502908664.000345"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "to which system? DRP or DR.  Yes.  kinda.",
        "ts": "1502910242.000514"
    },
    {
        "text": "dr is what I installed",
        "username": "hornjason",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502910284.000161"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "The quick short answer is not really in a run this command form.",
        "ts": "1502910479.000546"
    },
    {
        "text": "can use pxe instead?",
        "username": "hornjason",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502910533.000035"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "So - one option would be to pxe boot the machine to sledgehammer. That will create the machine in DR.  copy off the authorized_keys file in the root directory.  Then put that in the root directory of your machine after you reboot back to its OS.  Then you can mark the machine available and it will be operated against.  That is kinda slow.",
        "ts": "1502910677.000131"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "There is also the digitalrebar\/deploy\/scripts\/join_rebar.sh  - but it is old.  It does mostly what needs to be done.",
        "ts": "1502910844.000553"
    },
    {
        "text": "yea I tried tweaking it a bit,  the api has changed It looks like,  I was close but wanted to find out another way,",
        "username": "hornjason",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502910899.000076"
    },
    {
        "text": "I'll try and pxe the vm and see if that works",
        "username": "hornjason",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502910911.000325"
    },
    {
        "text": "@hornjason what are you trying to make happen?",
        "username": "zehicle",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502915770.000422"
    },
    {
        "text": "im trying to spin up vm's inside vmware...to do a POC ... instead of metal. thats all ",
        "username": "hornjason",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502915836.000337"
    },
    {
        "text": "then run install k8s\/openstack",
        "username": "hornjason",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502915856.000262"
    },
    {
        "text": "that install has decayed - will not work out of the box at this point",
        "username": "zehicle",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502915884.000380"
    },
    {
        "text": "sorry to tell you",
        "username": "zehicle",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502915925.000168"
    },
    {
        "text": "np, at least I know now,  I noticed you had a video using osx\/virtual box.  is this a usable option at this time ",
        "username": "hornjason",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502915970.000124"
    },
    {
        "text": "for testing provisioning, yes.",
        "username": "zehicle",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502915994.000366"
    },
    {
        "text": "right ... let me give that a try and play with join_rebar see what I can do",
        "username": "hornjason",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502916036.000347"
    },
    {
        "text": "we're about to drop v3.1 of DR Provision - that will include a simple dynamic inventory that can install k8s via kubespray",
        "username": "zehicle",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502916086.000467"
    },
    {
        "text": "I'll upload the doc into master for DR Provision and post the link",
        "username": "zehicle",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502916131.000038"
    },
    {
        "text": "https:\/\/github.com\/digitalrebar\/provision\/blob\/master\/doc\/integrations\/ansible.rst",
        "username": "zehicle",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502916588.000008"
    },
    {
        "text": "excellent,  i just registered a already running vm like join_rebar.sh does. hopefully this will work as well",
        "username": "hornjason",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502916620.000254"
    },
    {
        "text": "thanks rob",
        "username": "hornjason",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502916623.000601"
    },
    {
        "text": "ahh so this will add a provisioner so you can deploy from rebar",
        "username": "hornjason",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1502916721.000085"
    }
]