[
    {
        "user": "UDK9T3ZE0",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1540218684.000200",
        "text": "<@UDK9T3ZE0> has joined the channel"
    },
    {
        "client_msg_id": "16951dce-ff44-4273-bdd4-05860f36a4ff",
        "type": "message",
        "text": "<@UDK9T3ZE0> $welcome",
        "user": "U6QFVRJNB",
        "ts": "1540225421.000100"
    },
    {
        "type": "message",
        "subtype": "slackbot_response",
        "text": "Digital Rebar welcome information is here &gt; <http:\/\/rebar.digital\/community\/welcome.html>",
        "user": "USLACKBOT",
        "ts": "1540225421.000200"
    },
    {
        "client_msg_id": "a617dce1-4953-4c44-aaf1-5400d0989f21",
        "type": "message",
        "text": "Still stuck with this python swagger API.  I can make a patch of type JsonPatch and pass it to the patch_machine_params method (which claims it takes a machine uuid and a Json Patch object) but I get an attribute error.",
        "user": "U9BU09D51",
        "ts": "1540229993.000100"
    },
    {
        "client_msg_id": "295b94be-a525-4d7c-887f-cb046a3f46fb",
        "type": "message",
        "text": "`AttributeError: 'JsonPatch' object has no attribute 'swagger_types'`",
        "user": "U9BU09D51",
        "ts": "1540229995.000100"
    },
    {
        "client_msg_id": "8c6a2d5c-fc7a-4878-94b6-00cb0fd4a722",
        "type": "message",
        "text": "It seems like it doesn't actually want a JsonPatch object, but some other type of object.  Which I guess is why the docs say to do this and then pass that as the patch object `body = drp_swagger.Patch()`",
        "user": "U9BU09D51",
        "ts": "1540230047.000100"
    },
    {
        "client_msg_id": "1861f936-d34b-4cff-b954-c2da95562033",
        "type": "message",
        "text": "But I can't figure out how to either merge my patch and that object type, or get my patch into that object.  Or... however it's supposed to work.",
        "user": "U9BU09D51",
        "ts": "1540230075.000100"
    },
    {
        "client_msg_id": "84b6288b-84c8-4429-a4ca-d32d5c9c80c2",
        "type": "message",
        "text": "<@U9BU09D51> - you should try and get it working with curl - so you can understand what is really going on.  My guess is that your swagger generator is doing esoteric things.",
        "user": "U02DGQYK1",
        "ts": "1540230905.000100"
    },
    {
        "client_msg_id": "e991446b-2c81-40af-a37a-d0a92e8046bd",
        "type": "message",
        "text": "curl -k -u rocketskates:r0cketsk8ts <https:\/\/127.0.0.1:8092\/api\/v3\/machines\/Name:greg\/params>",
        "user": "U02DGQYK1",
        "ts": "1540230908.000100"
    },
    {
        "client_msg_id": "1f1cc75d-e409-433c-a08c-92ba65d32026",
        "type": "message",
        "text": "That gets the parameters from the machine named greg",
        "user": "U02DGQYK1",
        "ts": "1540230915.000100"
    },
    {
        "client_msg_id": "10eb1900-fcee-4385-ba66-eebd10b8a4c0",
        "type": "message",
        "text": "I’ll continue building them here - it will take a minute.",
        "user": "U02DGQYK1",
        "ts": "1540230929.000100"
    },
    {
        "client_msg_id": "8ed01092-2158-472e-a8b1-50748a253693",
        "type": "message",
        "text": "This gets the parameter greg from the machine named greg\n`curl -k -u rocketskates:r0cketsk8ts <https:\/\/127.0.0.1:8092\/api\/v3\/machines\/Name:greg\/params\/greg> `",
        "user": "U02DGQYK1",
        "ts": "1540230960.000100"
    },
    {
        "client_msg_id": "c6817b12-afd5-455d-9415-3d498a59f1b2",
        "type": "message",
        "text": "This will set without patch the parameter to a value\n`curl -k -u rocketskates:r0cketsk8ts <https:\/\/127.0.0.1:8092\/api\/v3\/machines\/Name:greg\/params\/greg> -H \"Content-Type: application\/json\" -X POST -d'\"fred\"'`",
        "user": "U02DGQYK1",
        "ts": "1540231018.000100"
    },
    {
        "client_msg_id": "80fd67e3-5798-44a1-b1cd-95fa3bc8331d",
        "type": "message",
        "text": "This will remove a parameter without PATCH\n`curl -k -u rocketskates:r0cketsk8ts <https:\/\/127.0.0.1:8092\/api\/v3\/machines\/Name:greg\/params\/greg> -H \"Content-Type: application\/json\" -X DELETE`",
        "user": "U02DGQYK1",
        "ts": "1540231055.000100"
    },
    {
        "client_msg_id": "c57a79e5-6b81-4b1b-8084-289094b8fd6d",
        "type": "message",
        "text": "I can do it with curl fine.  I can also do it with the Python requests library.  I just thought it would be easier to use the swagger client rather than essentially create my own API client in Python with the requests library.  I'm suspecting that was very wrong though.  :smile:",
        "user": "U9BU09D51",
        "ts": "1540231560.000100"
    },
    {
        "client_msg_id": "ba0a0e5f-0851-463f-a435-8a032771c886",
        "type": "message",
        "text": "I have yet to find a swagger code generator that generates usable code.",
        "user": "U02DGQYK1",
        "ts": "1540231673.000100"
    },
    {
        "client_msg_id": "f00989df-c615-4fb2-8502-f5ca5c1caa7b",
        "type": "message",
        "text": "For completeness, here is how to use patch on parameters of a machine.",
        "user": "U02DGQYK1",
        "ts": "1540231724.000100"
    },
    {
        "client_msg_id": "39a85a69-1a59-42c9-a2b5-35a8db447d17",
        "type": "message",
        "text": "`curl -k -u rocketskates:r0cketsk8ts <https:\/\/127.0.0.1:8092\/api\/v3\/machines\/Name:greg\/params> -H \"Content-Type: application\/json\" -X PATCH -d '[{\"op\": \"test\", \"path\": \"\/fred\", \"value\": \"GREG\"},{\"op\": \"replace\", \"path\": \"\/fred\", \"value\": \"BED\" }]'`",
        "user": "U02DGQYK1",
        "ts": "1540231729.000100"
    },
    {
        "client_msg_id": "cbee0e49-ca04-4b7e-94fa-c5068b4d328f",
        "type": "message",
        "text": "That will atomically replace the value in parameter `fred` with the value `BED` only if the value is currently `GREG`",
        "user": "U02DGQYK1",
        "ts": "1540231767.000100"
    },
    {
        "client_msg_id": "6bc826b8-f2b2-449b-a673-02d0a9cfe372",
        "type": "message",
        "text": "Cool.",
        "user": "U9BU09D51",
        "ts": "1540233174.000100"
    },
    {
        "client_msg_id": "d7603e46-6fd4-43f5-8846-b9e42211f935",
        "type": "message",
        "text": "I'm going to abandon this route and just go back to requests, which was working.  :smile:",
        "user": "U9BU09D51",
        "ts": "1540233193.000100"
    },
    {
        "client_msg_id": "75e77d77-7f67-47e3-8240-264cce24b6b5",
        "type": "message",
        "text": "Thanks",
        "user": "U9BU09D51",
        "ts": "1540233197.000100"
    },
    {
        "client_msg_id": "b86d8a2c-f69e-46d5-b686-c56ab9e0ccdf",
        "type": "message",
        "text": "<@U9BU09D51> <@UBJ22A0N5> &lt;&lt; both interested in Python API library",
        "user": "U02DHRR2L",
        "ts": "1540234850.000100"
    },
    {
        "client_msg_id": "b57ce249-c76b-4635-b27a-0bc4732cb667",
        "type": "message",
        "text": "I'm currently rolling my own since I'm unable to get the swagger codegen one to work.",
        "user": "U9BU09D51",
        "ts": "1540234906.000100"
    },
    {
        "client_msg_id": "19f62304-7d1f-4937-b38f-19878af51419",
        "type": "message",
        "text": "<@U9BU09D51> we started a Python API library.  <https:\/\/github.com\/cablelabs\/drp-python>  It's only a partial implementation, but would be happy to collaborate on it.",
        "user": "UBJ22A0N5",
        "ts": "1540234953.000100",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "cablelabs\/drp-python",
                "title_link": "https:\/\/github.com\/cablelabs\/drp-python",
                "text": "Python library for Digital Rebar APIs. <https:\/\/provision.readthedocs.io\/en\/tip\/doc\/api.html> - cablelabs\/drp-python",
                "fallback": "GitHub: cablelabs\/drp-python",
                "from_url": "https:\/\/github.com\/cablelabs\/drp-python",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/619376?s=400&v=4",
                "thumb_width": 96,
                "thumb_height": 96,
                "service_icon": "https:\/\/a.slack-edge.com\/bfaba\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/cablelabs\/drp-python"
            }
        ],
        "reactions": [
            {
                "name": "sunglasses",
                "users": [
                    "U02DHRR2L"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "674d23c6-dde4-4fcf-b505-cbc6c5c699c8",
        "type": "message",
        "text": "Oh cool.",
        "user": "U9BU09D51",
        "ts": "1540234963.000100"
    },
    {
        "client_msg_id": "da50e5bc-f07d-41bd-8f6f-723252904304",
        "type": "message",
        "text": "Let me look.",
        "user": "U9BU09D51",
        "ts": "1540234966.000100"
    },
    {
        "client_msg_id": "43dc080f-7483-4ad5-b7e3-7b84a33e37b4",
        "type": "message",
        "text": "This is a follow-up from the issues that <@UCYC9QJ3V> was having.  We have two almost identical systems.  One we created manually and the other we scripted.  On the one that we created manually, the SNAME and FNAME are set in the DHCPOFFER.  With the instance that we scripted, the SNAME and FNAME are just set to . in the DHCPOFFER.\n\nWhere is the SNAME and FNAME created by dr-provision and any thoughts on what is happening differently?  Unfortunately, Steve had to head out for a while, so I may not be able to answer all of the questions about what was done on each system.",
        "user": "UBJ22A0N5",
        "ts": "1540240078.000100"
    },
    {
        "client_msg_id": "d317c296-4026-484b-a7a1-538399649250",
        "type": "message",
        "text": "<@UBJ22A0N5> - check to make sure the prefs are set correctly and the bootenvs are available.",
        "user": "U02DGQYK1",
        "ts": "1540240166.000100"
    },
    {
        "client_msg_id": "195bfb22-2c0d-4590-b796-bac9fcef0c60",
        "type": "message",
        "text": "The prefs look the same, but we are specifying the boot end and not using the  default.",
        "user": "UBJ22A0N5",
        "ts": "1540240342.000100"
    },
    {
        "client_msg_id": "f4d3728c-27df-40a9-bcaf-c24d2160c492",
        "type": "message",
        "text": "The boot ens and workflows look the same.  On the server \/var\/lib\/dr-provision\/tftpbot are both 2.5GBs and look the same.",
        "user": "UBJ22A0N5",
        "ts": "1540240429.000100"
    },
    {
        "client_msg_id": "5b6156ef-da6a-45da-bf50-98f97c390fa8",
        "type": "message",
        "text": "So, for the unknown bootenv what did you put there?",
        "user": "U02DGQYK1",
        "ts": "1540240468.000100"
    },
    {
        "client_msg_id": "e284ab6c-ee8c-4dd7-ad84-508e9a288f52",
        "type": "message",
        "text": "cat unknownBootEnv.json\n{\"Meta\":{},\"Name\":\"unknownBootEnv\",\"Val\":\"discovery\"}",
        "user": "UBJ22A0N5",
        "ts": "1540240514.000100"
    },
    {
        "client_msg_id": "73724f58-1a7c-44f4-83ab-dd7aecbd522a",
        "type": "message",
        "text": "For the machines that we are booting, it is set to BootEnv\":\"ubuntu-16.04-install\"",
        "user": "UBJ22A0N5",
        "ts": "1540240561.000200"
    },
    {
        "client_msg_id": "230a3708-324e-45ed-b2a9-5afe78b66f0f",
        "type": "message",
        "text": "discovery is the normal one and it reports available.",
        "user": "U02DGQYK1",
        "ts": "1540240562.000100"
    },
    {
        "client_msg_id": "1d1731e5-cf4c-494d-a94f-a59cf9de7049",
        "type": "message",
        "text": "hmm - ?? what do you mean for that last sentence?",
        "user": "U02DGQYK1",
        "ts": "1540240602.000100"
    },
    {
        "client_msg_id": "e8cd23c5-f00b-4f22-afa9-d68c09fd6d64",
        "type": "message",
        "text": "This is the machine\/id.json for the working system.   ```cat da11ba2b-509e-47c0-b77a-5386a2a35f26.json\n{\"Validated\":false,\"Available\":false,\"Errors\":[],\"ReadOnly\":false,\"Meta\":{\"color\":\"black\",\"feature-flags\":\"change-stage-v2\",\"icon\":\"server\"},\"Name\":\"test\",\"Description\":\"test\",\"Uuid\":\"da11ba2b-509e-47c0-b77a-5386a2a35f26\",\"CurrentJob\":\"\",\"Address\":\"10.1.0.11\",\"Stage\":\"ubuntu-16.04-install\",\"BootEnv\":\"ubuntu-16.04-install\",\"Profiles\":[],\"Profile\":{\"Validated\":false,\"Available\":false,\"Errors\":null,\"ReadOnly\":false,\"Meta\":null,\"Name\":\"\",\"Description\":\"\",\"Documentation\":\"\",\"Params\":null},\"Params\":{},\"Tasks\":[\"stage:ubuntu-16.04-install\",\"bootenv:ubuntu-16.04-install\",\"ubuntu-drp-only-repos\",\"ssh-access\",\"stage:complete\",\"bootenv:local\"],\"CurrentTask\":-1,\"Runnable\":true,\"Secret\":\"_JNdSWE3TcyjvV3L\",\"OS\":\"ubuntu-16.04\",\"HardwareAddrs\":[],\"Workflow\":\"clone-ubuntu16\"}```\n\nThis is the one for the none working system.\n```{\"Validated\":false,\"Available\":false,\"Errors\":[],\"ReadOnly\":false,\"Meta\":{\"color\":\"black\",\"feature-flags\":\"change-stage-v2\",\"icon\":\"server\"},\"Name\":\"test\",\"Description\":\"test\",\"Uuid\":\"6925e6b3-eb4f-4b90-82ca-6e64bf3c2bff\",\"CurrentJob\":\"\",\"Address\":\"10.1.0.11\",\"Stage\":\"ubuntu-16.04-install\",\"BootEnv\":\"ubuntu-16.04-install\",\"Profiles\":[],\"Profile\":{\"Validated\":false,\"Available\":false,\"Errors\":null,\"ReadOnly\":false,\"Meta\":null,\"Name\":\"\",\"Description\":\"\",\"Documentation\":\"\",\"Params\":null},\"Params\":{\"rs-debug-enable\":true},\"Tasks\":[\"stage:ubuntu-16.04-install\",\"bootenv:ubuntu-16.04-install\",\"ubuntu-drp-only-repos\",\"ssh-access\",\"stage:complete\",\"bootenv:local\"],\"CurrentTask\":-1,\"Runnable\":true,\"Secret\":\"ANzUhIrfREq--UUG\",\"OS\":\"ubuntu-16.04\",\"HardwareAddrs\":[],\"Workflow\":\"clone-ubuntu16\"}```",
        "user": "UBJ22A0N5",
        "ts": "1540240662.000100"
    },
    {
        "client_msg_id": "f8c07189-3933-4ec0-95cc-2a08262d066c",
        "type": "message",
        "text": "We don't want to use discovery",
        "user": "UBJ22A0N5",
        "ts": "1540240669.000100"
    },
    {
        "client_msg_id": "d3243890-d9b2-492f-8996-2a85f276fe15",
        "type": "message",
        "text": "okay - so is the ubuntu-16.04-install bootenv available?",
        "user": "U02DGQYK1",
        "ts": "1540240781.000100"
    },
    {
        "client_msg_id": "bc936b8c-30a4-48c7-a5fc-ed2cc68c2b40",
        "type": "message",
        "text": "Does the machine have internet access?",
        "user": "U02DGQYK1",
        "ts": "1540240790.000100"
    },
    {
        "client_msg_id": "2142e30d-b2fe-4dd7-8e4b-5a2c3a16df87",
        "type": "message",
        "text": "As far as I can tell.",
        "user": "UBJ22A0N5",
        "ts": "1540240792.000100"
    },
    {
        "client_msg_id": "0df729f4-f6de-473e-8838-2c0a9f8e97c0",
        "type": "message",
        "text": "I can reach the internet from that machine, but it is not accessible from the internet.",
        "user": "UBJ22A0N5",
        "ts": "1540240816.000100"
    },
    {
        "client_msg_id": "93067902-4d04-4541-9bf0-1d6722926741",
        "type": "message",
        "text": "`drpcli bootenvs exists ubuntu-16.04-install` returns 0 on both systems.]",
        "user": "UBJ22A0N5",
        "ts": "1540240950.000100"
    },
    {
        "client_msg_id": "43970fd8-24da-4dc6-9d5f-279b7cd8a925",
        "type": "message",
        "text": "`drpcli bootenvs show ubuntu-16.04-install | jq .Available`",
        "user": "U02DGQYK1",
        "ts": "1540240996.000100"
    },
    {
        "client_msg_id": "db85d2c0-abcd-4d3c-a263-e7d3fb94b9b6",
        "type": "message",
        "text": "returns `true`",
        "user": "UBJ22A0N5",
        "ts": "1540241038.000100"
    },
    {
        "client_msg_id": "5489356f-71e9-4780-bbd8-dfa51b00eb33",
        "type": "message",
        "text": "check your subnet or reservations for bootfile overrides?",
        "user": "U02DGQYK1",
        "ts": "1540241073.000100"
    },
    {
        "client_msg_id": "3a9366d9-fe48-40f4-82f1-9f78dd785876",
        "type": "message",
        "text": "Don’t know.",
        "user": "U02DGQYK1",
        "ts": "1540241076.000100"
    },
    {
        "client_msg_id": "bcced9aa-914a-4f2f-ac02-566cb4a08b7d",
        "type": "message",
        "text": "Would need to see your automation",
        "user": "U02DGQYK1",
        "ts": "1540241084.000100"
    },
    {
        "client_msg_id": "70d3f469-c2e5-496f-88cf-0331426124fc",
        "type": "message",
        "text": "This is the subnet that works.\n```{\"Validated\":false,\"Available\":false,\"Errors\":[],\"ReadOnly\":false,\"Meta\":{},\"Name\":\"local_subnet\",\"Description\":\"\",\"Documentation\":\"\",\"Enabled\":true,\"Proxy\":false,\"Unmanaged\":false,\"Subnet\":\"10.1.0.0\/24\",\"NextServer\":\"\",\"ActiveStart\":\"10.1.0.2\",\"ActiveEnd\":\"10.1.0.254\",\"ActiveLeaseTime\":60,\"ReservedLeaseTime\":7200,\"OnlyReservations\":false,\"Options\":[{\"Code\":3,\"Value\":\"10.1.0.1\"},{\"Code\":6,\"Value\":\"8.8.8.8\"},{\"Code\":15,\"Value\":\"<http:\/\/example.com|example.com>\"},{\"Code\":1,\"Value\":\"255.255.255.0\"},{\"Code\":28,\"Value\":\"10.1.0.255\"}],\"Strategy\":\"MAC\",\"Pickers\":[\"hint\",\"nextFree\",\"mostExpired\"]}```\n\nThis is the subnet that doesn't work.\n```{\"Validated\":false,\"Available\":false,\"Errors\":[],\"ReadOnly\":false,\"Meta\":{},\"Name\":\"Managment_SUBNET\",\"Description\":\"management\",\"Documentation\":\"\",\"Enabled\":true,\"Proxy\":false,\"Unmanaged\":true,\"Subnet\":\"10.1.0.0\/24\",\"NextServer\":\"\",\"ActiveStart\":\"10.1.0.2\",\"ActiveEnd\":\"10.1.0.254\",\"ActiveLeaseTime\":60,\"ReservedLeaseTime\":7200,\"OnlyReservations\":false,\"Options\":[{\"Code\":1,\"Value\":\"255.255.255.0\"},{\"Code\":3,\"Value\":\"10.1.0.1\"},{\"Code\":6,\"Value\":\"8.8.8.8\"},{\"Code\":15,\"Value\":\"<http:\/\/example.com|example.com>\"},{\"Code\":28,\"Value\":\"10.1.0.255\"}],\"Strategy\":\"MAC\",\"Pickers\":[\"hint\"]}```\n\nWe have have reservations for the IP on both systems.",
        "user": "UBJ22A0N5",
        "ts": "1540241180.000100"
    },
    {
        "client_msg_id": "69dd7d18-fe07-4511-ad45-e16b375df591",
        "type": "message",
        "text": "In the second subnet, why do you have unmanaged set to true and the pickers set to only hint?",
        "user": "U02DGQYK1",
        "ts": "1540241275.000100"
    },
    {
        "client_msg_id": "f57bc0bd-eb3a-4ac0-9a3f-19c14287b8d7",
        "type": "message",
        "text": "```\n        \/\/ Unmanaged indicates that dr-provision will never send\n        \/\/ boot-related options to machines that get leases from this\n        \/\/ subnet.  If false, dr-provision will send whatever boot-related\n        \/\/ options it would normally send.  It is an error for Unmanaged and\n        \/\/ Proxy to both be true.\n        \/\/\n        \/\/ required: true\n        Unmanaged bool\n```",
        "user": "U02DGQYK1",
        "ts": "1540241332.000100"
    },
    {
        "client_msg_id": "a9ed2741-4933-4eb0-b22f-e63e5538e48a",
        "type": "message",
        "text": "You need to set unmanaged to false if you want bootfile sent.",
        "user": "U02DGQYK1",
        "ts": "1540241359.000100"
    },
    {
        "client_msg_id": "eb0ce1e7-fde7-462d-8787-f605b90ca2c3",
        "type": "message",
        "text": "Pickers should be all three values as well.",
        "user": "U02DGQYK1",
        "ts": "1540241406.000100"
    },
    {
        "client_msg_id": "5d673627-a5e0-48de-8948-4cab913daeb0",
        "type": "message",
        "text": "The reservation will save you there.",
        "user": "U02DGQYK1",
        "ts": "1540241418.000100"
    },
    {
        "client_msg_id": "286f7072-1f95-4c03-afea-303451208923",
        "type": "message",
        "text": "<@U02DGQYK1> Excellent.\n\nAre there different defaults from the portal and the api?  We don't currently specify pickers or unmanaged with either case.",
        "user": "UBJ22A0N5",
        "ts": "1540241637.000100"
    },
    {
        "client_msg_id": "8fa192af-f370-4dde-aaaa-3fea77950c4c",
        "type": "message",
        "text": "Yes - possibly.",
        "user": "U02DGQYK1",
        "ts": "1540241663.000100"
    },
    {
        "client_msg_id": "327e0c15-3788-4cc0-9878-c57d73f2f6a7",
        "type": "message",
        "text": "The UX attempts to do some additional math on setting the values.  Unmanaged should have been set to false by default if left blank.  Pickers is probably full set in the UX by default.",
        "user": "U02DGQYK1",
        "ts": "1540241747.000100"
    },
    {
        "client_msg_id": "2139abca-dddf-41a9-9874-799ded12b736",
        "type": "message",
        "text": "One more question: Why doesn't specifying --ipaddr add `--static-ip=10.197.133.151 --force-static` to \/etc\/systemd\/system\/dr-provision.service?\n\nIs there a way to do that from the install.sh script or will we just need to update the dr-provision.service file on our own?\n\nWe are running dr-provision on a SNAT with a dhcp-relay.  Changing the service file works like a charm.",
        "user": "UBJ22A0N5",
        "ts": "1540243200.000100"
    },
    {
        "client_msg_id": "2cf5d606-fc82-4b70-ad4f-18c2111ae734",
        "type": "message",
        "text": "Feature request. :slightly_smiling_face:  In general, we don’t have many people doing SNAT with a dhcp-relay using the install.sh script.  :slightly_smiling_face:",
        "user": "U02DGQYK1",
        "ts": "1540243279.000100"
    },
    {
        "client_msg_id": "b88681dd-6cc1-4211-a183-615176be43d8",
        "type": "message",
        "text": "We also don’t really want people using the static-ip.  it gets them in trouble more often than not.  In your case, it makes sense.",
        "user": "U02DGQYK1",
        "ts": "1540243357.000100"
    },
    {
        "client_msg_id": "f3003752-d97f-4e2b-b273-0f686cd50daa",
        "type": "message",
        "text": "The feature request is good though.",
        "user": "U02DGQYK1",
        "ts": "1540243361.000100"
    },
    {
        "client_msg_id": "8e40f096-0394-4cdd-a84a-d30e653dca2a",
        "type": "message",
        "text": "Well and also the --ipaddr flag is only used for isolated installs and the output message.",
        "user": "U02DGQYK1",
        "ts": "1540243408.000100"
    },
    {
        "client_msg_id": "a817db26-5f70-4c7c-b483-776d3aafc00e",
        "type": "message",
        "text": "porbably have to do it by “hand” for now.",
        "user": "U02DGQYK1",
        "ts": "1540243486.000100"
    },
    {
        "client_msg_id": "ca50a69d-79b9-42eb-a92a-b5ee5022ae13",
        "type": "message",
        "text": "<@U02DGQYK1> Thanks",
        "user": "UBJ22A0N5",
        "ts": "1540244293.000100"
    },
    {
        "client_msg_id": "fb2628c3-64d4-493f-8f45-ced6f3bb794a",
        "type": "message",
        "text": "If you are looking for more feature requests.  Exposing the values on unmanaged and Pickers in the ux could be helpful.",
        "user": "UBJ22A0N5",
        "ts": "1540244777.000100"
    },
    {
        "client_msg_id": "8a40bf5d-fee8-4cb7-bd4e-5b06bbfe3bf7",
        "type": "message",
        "text": "<!here> - sledgehammer update in tip again.  Sorry.  More tweaks.  This one to handle networks with portdelays.",
        "user": "U02DGQYK1",
        "ts": "1540249395.000100"
    },
    {
        "client_msg_id": "b11a0116-7fc0-4aed-bcce-6607228792c4",
        "type": "message",
        "text": "adding `provisioner.portdelay=10` to `kernel-console` parameter will cause the stage1 sledgehammer to delay 10 seconds after marking links up before running dhcp or doing anything else.  `10 ` is an example can be other integers.",
        "user": "U02DGQYK1",
        "ts": "1540249474.000100",
        "reactions": [
            {
                "name": "8ball",
                "users": [
                    "U02DHRR2L"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UCY9559JQ",
                    "UAKG71YS0"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "4d5b91df-90f9-4ec5-81c9-c44ae8427702",
        "type": "message",
        "text": "<!channel> - reminder on Digital Rebar Provision online meetup - Tuesday at 11am PST (tomorrow).  Details:\n<https:\/\/www.meetup.com\/digitalrebar\/events\/lchdhpyxnbfc\/>",
        "user": "U6QFVRJNB",
        "ts": "1540251511.000100",
        "attachments": [
            {
                "service_name": "Meetup",
                "title": "v028: Pooling, Bundlize and Convert, Ansible Tower, Community Feedback",
                "title_link": "https:\/\/www.meetup.com\/digitalrebar\/events\/lchdhpyxnbfc\/",
                "text": "Tue, Oct 23, 2018, 11:00 AM: Start Time is 11:00 am PST (12:00 pm MST, 1:00 pm CST, 2:00 pm EST ... )Welcome to the Digital Rebar online meetup. Please note we'll be using <http:\/\/Zoom.us|Zoom.us> for our meeting; so",
                "fallback": "Meetup: v028: Pooling, Bundlize and Convert, Ansible Tower, Community Feedback",
                "image_url": "https:\/\/secure.meetupstatic.com\/photos\/event\/d\/1\/b\/1\/600_467453681.jpeg",
                "fields": [
                    {
                        "title": "Where",
                        "value": "Online <https:\/\/zoom.us\/j\/3403934274> Mountain View, CA",
                        "short": true
                    },
                    {
                        "title": "When",
                        "value": "Tue, Oct 23, 2018, 11:00 AM",
                        "short": true
                    }
                ],
                "from_url": "https:\/\/www.meetup.com\/digitalrebar\/events\/lchdhpyxnbfc\/",
                "image_width": 472,
                "image_height": 250,
                "image_bytes": 69998,
                "service_icon": "https:\/\/www.meetup.com\/mu_static\/en-US\/m_swarm_120x120.4f86abc9.png",
                "id": 1,
                "original_url": "https:\/\/www.meetup.com\/digitalrebar\/events\/lchdhpyxnbfc\/"
            }
        ]
    }
]