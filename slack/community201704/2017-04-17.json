[
    {
        "text": "<@U02DHRR2L|zehicle> it's not possible to reboot a physical node after detect it, to do install system!!! i do it with maas and cloudinit. ",
        "username": "moula",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492437668.201136"
    },
    {
        "text": "<@U02DHRR2L|zehicle>  another thing, if i shutdown my drp server, how i can be enable it automatically? thank you.  ",
        "username": "moula",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492437800.246942"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "@moula - this is @galthaus - That is the point of dr-provision.  It is simple and quick.  DigitalRebar provides that level of integration today.",
        "ts": "1492440494.195263"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "@moula - run the install.sh without the isolated flag and it will place start up scripts in place, put binaries in place, and show you the service commands to enable and start dr-provision to survive reboots.",
        "ts": "1492440537.211005"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "DR team: in DRP, where can I set params for a host? I see there's a \"OptionalParams\" section in a given bootenv, but can these be set on a per-host basis?",
        "ts": "1492440549.214898"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "<@U416T0AAX> - they are only set on a per host or global level.  I feel another helper coming on.",
        "ts": "1492440580.226398"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "drpcli params is for manipulating global parameters",
        "ts": "1492440595.232009"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "drpcli machines update &lt;uuid&gt; '{ json blob of params}'   is for machine specific params",
        "edited": {
            "user": "U02DGQYK1",
            "ts": "1492440628.000000"
        },
        "ts": "1492440625.243412"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "Thought so - if I do 'drpcli params list' I get empty set",
        "ts": "1492440646.251026"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "Yes - params are free form.",
        "ts": "1492440668.259393"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "They are deep dictionaries.",
        "ts": "1492440681.264517"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "string -&gt; Struct",
        "ts": "1492440688.267209"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "where struct can be a json object, string, int, bool, ...",
        "ts": "1492440697.270713"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "I think that params should be perhaps site-specific, apply to a group of hosts",
        "ts": "1492440728.282036"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "For example, you can inject ssh keys by params.  They need to be an array of objects.  I'll be documenting this.",
        "ts": "1492440738.285528"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "Like ntp_servers for example",
        "ts": "1492440765.295545"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "<@U416T0AAX> - that is where DR comes in.  We are trying to give some function but level grouping and higher order ops to DR.",
        "ts": "1492440766.296062"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "Well - long term vision is many dr-provision units local to regions to handle bandwidth and locality issues with a central DR driving them.",
        "ts": "1492440802.309126"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "Ah",
        "ts": "1492440815.313898"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "Any docs yet on providing params on a per-host basis?",
        "ts": "1492440904.347467"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "of course not- I think we may be exposing a little too fast, but that is next on my plate.  I have an internal thing I'm working on, but those docs and flows are next.",
        "ts": "1492440990.380795"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": ":slightly_smiling_face:",
        "ts": "1492440994.382142"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "Trying to get to a point where I can substitute DRP for Cobbler in my environment, but missing some functionality (like profiles for groups of servers)",
        "ts": "1492441002.385170"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "that is what we want and I need to help with that.",
        "ts": "1492441030.395625"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "I could live with per-host for now",
        "ts": "1492441030.395997"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "how do you specify the group membership and group scope?",
        "ts": "1492441096.421281"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "need to drive for a bit.  Back in a little while.",
        "ts": "1492441146.441119"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "There would have to be something like profiles in DRP that combine a bootenv, and associated templates, and then instead of defining bootenv per host, can specify a template ",
        "ts": "1492441277.494849"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "Like for instance in my environment, I have many Ubuntu 16.04 profiles that only differ in things like disk partitioning, root user enabled or not, default user + passwd",
        "ts": "1492441382.536338"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "95%+ of the OS install is the same, but these are crucial differences",
        "ts": "1492441423.552171"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "(Maybe wrong here) in DRP, a bootenv is a single OS flavor installer map - don't want to have to have many of these to handle the &gt;5% differences",
        "ts": "1492441533.594716"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "Sorry for the tidal wave of txt here - do concentrate on driving :)",
        "ts": "1492441590.617400"
    },
    {
        "type": "message",
        "user": "U02DHRR2L",
        "text": "<@U416T0AAX> the advanced workflow and system profiles are already in full DR.  DRP is intended to be narrrowly scoped and then driven by higher level services.",
        "ts": "1492442799.084400"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "Acutally, I think we need to document bootenvs better.",
        "ts": "1492443134.218356"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "If we add template in template (with parameter drivers and examples), I think you have everything you need and more.",
        "ts": "1492443156.227599"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "<@U02DHRR2L> It seems to me the value in full-on DR is to take advantage of the DR-provided orchestration of the full OS + software stack (which in something like K8s or OpenStack is quite complex.) What about use case of just install OS + use existing automation developed by end-user to get machines ready for further use (much simpler use case?)",
        "ts": "1492443177.235542"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "The variable expansion into something more than just string replacement is pretty powerful.",
        "ts": "1492443179.236480"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "Are bootenvs supposed to be like profiles?",
        "ts": "1492443293.281897"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "bootenvs are intended to be a bootable environment that can be customized per machine.",
        "ts": "1492443392.320554"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "This includes local disks, discovery, installation, coreos diskless, burn-in testing, whatever.",
        "ts": "1492443420.331828"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "We intend the bootenvs to be customizable through parameters.  The complexity of the templates contained in the bootenv and how they are tied to the parameters drive the complexity and the mutability of the bootenv.",
        "ts": "1492443474.352218"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "Like you could have no params and hardcode an install.  This would generate nxN bootenvs for your description.",
        "ts": "1492443500.362370"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "Another level is to create a bootenv that takes a param that defines user info.  The user info is an array of user data objects (object is uname, passhash, groups, ... whatever).  Use golang template expanders to parse that list into user names.",
        "ts": "1492443567.387700"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "The next level up is to put that into a template that preseed\/kickstart template references.",
        "ts": "1492443588.395983"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "At that point, you can set a variable on the machine that says complex_users= true and user_table=[ {}, {}, ... ]",
        "ts": "1492443628.411701"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "This is what I need to spend time documenting.",
        "ts": "1492443651.420616"
    },
    {
        "text": "<@U02DHRR2L|zehicle>  I will try it, Merci beaucoup.",
        "username": "moula",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492444537.771192"
    },
    {
        "text": "@galthaus  sorry . merci.",
        "username": "moula",
        "bot_id": "B41PS9J94",
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492444642.812774"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "@moula - np.",
        "ts": "1492444668.823441"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "Some DRP questions relating to host config:\n- How to spec initial user\/passwd other than default \"rocketskates\" one\n- How to set static IP \/ mask \/ gateway\n- How to insert desired pubkey in root's .ssh\/authorized_keys\n- If desired, how to set root password, and allow root access via SSH",
        "ts": "1492459985.183903"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "Can these sorts of things be done?",
        "ts": "1492459999.189893"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "well - yes.  Some require more work than others.  For example, static IP.  dr-provision isn't managing address spaces beyond simple DHCP (and in your case not at all).  The machine has an address field that can be referenced in a template to then set a static IP.",
        "ts": "1492460132.242933"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "that way.  You would have to specify the gateway and mask as new parameters.",
        "ts": "1492460159.253866"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "<@U02DGQYK1> Are any of these handled thru just setting properties (params), or all take template changes?",
        "ts": "1492462074.023758"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "most are already handled with parameters today",
        "ts": "1492462134.047631"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "everything but static ip config is handled through parameters today.",
        "ts": "1492462166.060327"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "and maybe root access via ssh.",
        "ts": "1492462183.067162"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "<@U02DGQYK1>, any docs on setting the above params? (sorry, haven’t looked - point me to the URL if they exist plz)",
        "ts": "1492477785.536280"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "I'm writing them tonight",
        "ts": "1492478387.632593"
    },
    {
        "type": "message",
        "user": "U416T0AAX",
        "text": "Thanks - looking forward to implementing them :slightly_smiling_face:",
        "ts": "1492478676.677020"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "<@U416T0AAX> - check readthedocs with the latest (tip isn't working right).  Sigh.  <http:\/\/provision.readthedocs.io\/en\/latest\/doc\/arch\/data.html#template>",
        "ts": "1492496727.793539"
    },
    {
        "type": "message",
        "user": "U02DGQYK1",
        "text": "More to come.  Sorry.  Hopefully tomorrow.",
        "ts": "1492496765.805806"
    }
]